#!/usr/bin/env bash

set -e

SITES_DIR=/var/www
PUBLIC_DIR=public
FPM_MAX_WORKERS=5
FPM_MIN_WORKERS=1
FPM_DISPLAY_ERRORS=on
LOGS_DIR=/var/log/www

if [ -f ~/.site_manager ]; then
    . ~/.site_manager
elif [ -f /etc/site_manager ]; then
    . /etc/site_manager
fi

PHP_VERSION=7.4

function askForDomain {
    DOMAIN="$1"
    while true; do
        if [ -z "${DOMAIN}" ]; then
            read -p "Website domain: " DOMAIN
        elif ! echo "${DOMAIN}" | grep -qP '(?=^.{5,254}$)(^(?:(?!\d+\.)[a-zA-Z0-9_\-]{1,63}\.?)+(?:[a-zA-Z]{2,})$)'; then
            echo "This is not a valid domain name (domain.ltd)"
            read -p "Website domain: " DOMAIN
        else
            break
        fi
    done

    if [[ "${#DOMAIN}" -gt 32 ]]; then
        echo "This domain name is too long. Max length 32 symbols"
        exit 2
    fi
}

function askForMinFpmWorkers {
    MIN_WORKERS="$1"
    while true; do
        if [ -z "${MIN_WORKERS}" ]; then
            read -p "Minimum php-fpm workers [${FPM_MIN_WORKERS}]: " MIN_WORKERS
            if [ -z "${MIN_WORKERS}" ]; then
                MIN_WORKERS=${FPM_MIN_WORKERS}
            fi
        elif [ "${MIN_WORKERS}" -lt 1 ]; then
            echo "Maximum php-fpm workers cannot be lower than 1"
            MIN_WORKERS=
        else
            break
        fi
    done
}

function askForMaxFpmWorkers {
    MAX_WORKERS="$1"
    while true; do
        if [ -z "${MAX_WORKERS}" ]; then
            read -p "Maximum php-fpm workers [${FPM_MAX_WORKERS}]: " MAX_WORKERS
            if [ -z "${MAX_WORKERS}" ]; then
                MAX_WORKERS=${FPM_MAX_WORKERS}
            fi
        elif [ "${MAX_WORKERS}" -lt 3 ]; then
            echo "Maximum php-fpm workers cannot be lower than 3"
            MAX_WORKERS=
        else
            break
        fi
    done
}

function askForDisplayErrors {
    DISPLAY_ERRORS="$1"
    while true; do
        if [ "${DISPLAY_ERRORS}" != "on" ] && [ "${DISPLAY_ERRORS}" != "off" ]; then
            read -p "Display php errors in browser [on/off]: " DISPLAY_ERRORS
            if [ -z "${DISPLAY_ERRORS}" ]; then
                DISPLAY_ERRORS=${FPM_DISPLAY_ERRORS}
            fi
        else
            break
        fi
    done
}

function getSitePhpVersion {
    SITE_PHP_VERSION=${PHP_VERSION}
    if [ -f ${SITEROOT}/.php-version ]; then
        SITE_PHP_VERSION=`cat ${SITEROOT}/.php-version`
    else
        echo "${PHP_VERSION}" | sudo tee ${SITEROOT}/.php-version > /dev/null
    fi
}

case $1 in
    create)
        askForDomain $2
        askForMinFpmWorkers $3
        askForMaxFpmWorkers $4
        askForDisplayErrors $5

        SITEROOT=${SITES_DIR}/${DOMAIN}
        WEBROOT=${SITEROOT}/${PUBLIC_DIR}
        FPM_SOCKET=/var/run/php/${DOMAIN}.sock
        PHP_POOL=/etc/php/${PHP_VERSION}/fpm/pool.d/${DOMAIN}.conf

        if ! getent passwd ${DOMAIN} > /dev/null; then
            echo "Creating system user ${DOMAIN}"
            sudo useradd -s /bin/bash -r -d "${SITEROOT}" -M "${DOMAIN}"
        fi

        if [ -d ${SITEROOT} ]; then
            echo "Site root directory already exists"
        else
            echo "Creating website root directory at ${SITEROOT}"
            sudo mkdir -p ${WEBROOT}
            echo "Hello World!" | sudo tee ${WEBROOT}/index.php > /dev/null
            getSitePhpVersion

            echo "Changing ownership of all site files to ${DOMAIN}:${DOMAIN}"
            sudo chown -R ${DOMAIN}:${DOMAIN} ${SITEROOT}
        fi

        if [ ! -d ${LOGS_DIR}/${DOMAIN} ]; then
            echo "Creating website logs directory at ${LOGS_DIR}/${DOMAIN}"
            sudo mkdir -p ${LOGS_DIR}/${DOMAIN}
            sudo touch ${LOGS_DIR}/${DOMAIN}/nginx.log
            sudo touch ${LOGS_DIR}/${DOMAIN}/php.log
            sudo chown www-data:www-data ${LOGS_DIR}/${DOMAIN}/nginx.log
            sudo chown ${DOMAIN}:${DOMAIN} ${LOGS_DIR}/${DOMAIN}/php.log
        fi

        if [ -f /etc/nginx/sites-available/${DOMAIN}.conf ]; then
            echo "Configuration file for nginx already exists"
        else
            read -p "Website root directory: " -i "${WEBROOT}" -e WEBROOT

            echo "Creating nginx configuration file"
            sudo tee /etc/nginx/sites-available/${DOMAIN}.conf &>/dev/null <<EOF
server {
    server_name  www.${DOMAIN};
    rewrite ^(.*) http://${DOMAIN}\$1 permanent;
}
server {
    listen 80;
    server_name ${DOMAIN};
    root ${WEBROOT};
    index index.html index.php;
    charset utf-8;

    access_log /dev/null;
    log_not_found off;
    error_log ${LOGS_DIR}/${DOMAIN}/nginx.log error;
    error_page 404 /index.php;

    # For non-production servers uncomment next line
    #add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive, noimageindex";

    location / {
        try_files \$uri \$uri/ /index.php?\$query_string;
    }

    location ~* \.(?:jpg|jpeg|gif|png|ico|gz|svg|svgz|mp4|ogg|ogv|webm|webp)$ {
        #expires 7d;
        #add_header Cache-Control "public";
    }

    location ~ \.php$ {
        fastcgi_pass unix:${FPM_SOCKET};
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME \$realpath_root\$fastcgi_script_name;
        include fastcgi_params;
    }
}
EOF
        fi

        if [ -f ${PHP_POOL} ]; then
            echo "Configuration file for php-fpm already exists"
        else
            echo "Creating php-fpm configuration file"
            sudo tee "${PHP_POOL}" &>/dev/null <<EOF
[${DOMAIN}]
user = ${DOMAIN}
group = ${DOMAIN}
listen = ${FPM_SOCKET}
listen.owner = www-data
listen.group = www-data
pm = dynamic
pm.start_servers = ${MIN_WORKERS}
pm.max_children = ${MAX_WORKERS}
pm.min_spare_servers = ${MIN_WORKERS}
pm.max_spare_servers = ${MAX_WORKERS}
pm.max_requests = 200
catch_workers_output = yes
php_flag[display_errors] = ${DISPLAY_ERRORS}
php_admin_value[error_log] = ${LOGS_DIR}/${DOMAIN}/php.log
php_admin_flag[log_errors] = on
;php_admin_value[memory_limit] = 512M
EOF
        fi

        if [ ! -L /etc/nginx/sites-enabled/${DOMAIN}.conf ]; then
            echo "Enabled domain ${DOMAIN}"
            sudo ln -s /etc/nginx/sites-available/${DOMAIN}.conf /etc/nginx/sites-enabled/ > /dev/null
        fi

        echo "Restarting services"
        sudo service nginx reload > /dev/null
        sudo service php${PHP_VERSION}-fpm restart > /dev/null
        ;;
    delete)
        askForDomain $2
        getSitePhpVersion

        read -p "Are you sure you want to DELETE it? [y/n]: " yn

        if [ "${yn}" != "y" ]; then
            exit 0
        fi

        sudo rm /etc/nginx/sites-available/${DOMAIN}.conf
        sudo rm /etc/nginx/sites-enabled/${DOMAIN}.conf
        sudo rm /etc/php/${SITE_PHP_VERSION}/fpm/pool.d/${DOMAIN}.conf
        sudo rm -rf ${LOGS_DIR}/${DOMAIN}
        echo "Deleted configurations for ${DOMAIN}"
        sudo service nginx reload
        sudo service php${SITE_PHP_VERSION}-fpm reload

        read -p "Do you want to DELETE site files? [y/n]: " yn
        if [ "${yn}" == "y" ]; then
            echo "Deleting system user and its files"
            sudo userdel -rf ${DOMAIN}
        fi
        ;;
    enable)
        askForDomain $2
        getSitePhpVersion

        if [ -f /etc/nginx/sites-available/${DOMAIN}.conf ]; then
            sudo ln -s /etc/nginx/sites-available/${DOMAIN}.conf /etc/nginx/sites-enabled/
            sudo service nginx reload
        else
            echo "Cannot find nginx configuration file for ${DOMAIN}"
        fi

        if [ -f /etc/php/${SITE_PHP_VERSION}/fpm/pool.d/${DOMAIN}.conf.disabled ]; then
            sudo mv /etc/php/${SITE_PHP_VERSION}/fpm/pool.d/${DOMAIN}.conf.disabled /etc/php/${SITE_PHP_VERSION}/fpm/pool.d/${DOMAIN}.conf
            sudo service php${SITE_PHP_VERSION}-fpm reload
        else
            echo "Cannot find php-fpm configuration file for ${DOMAIN}"
        fi
        ;;
    disable)
        askForDomain $2
        getSitePhpVersion

        if [ -f /etc/nginx/sites-available/${DOMAIN}.conf ]; then
            sudo rm /etc/nginx/sites-enabled/${DOMAIN}.conf
            sudo service nginx reload
        else
            echo "Cannot find nginx configuration file for ${DOMAIN}"
        fi

        if [ -f /etc/php/${SITE_PHP_VERSION}/fpm/pool.d/${DOMAIN}.conf ]; then
            sudo mv /etc/php/${SITE_PHP_VERSION}/fpm/pool.d/${DOMAIN}.conf /etc/php/${SITE_PHP_VERSION}/fpm/pool.d/${DOMAIN}.conf.disabled
            sudo service php${SITE_PHP_VERSION}-fpm reload
        else
            echo "Cannot find php-fpm configuration file for ${DOMAIN}"
        fi
        ;;
    *)
        echo "Usage: create|delete|enable|disable domain.tld"
        ;;
esac
